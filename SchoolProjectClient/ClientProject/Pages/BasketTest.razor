@page "/manage-baskets"

@using ClientProject.Pages.Baskets
@using SchoolProjectClient.Client.Services.Baskets
@using SchoolProjectClient.Client.Model.Basket
@using MudBlazor
@using Variant = MudBlazor.Variant

@inject IBasketService _basketService;
@inject IDialogService _dialogService;

<MudButton Variant="Variant.Filled" Color="Color.Success" OnClick="OpenAddBasketPopup">Add New Basket</MudButton>
<MudTable Items="@Baskets" Class="full-width-table">
    <HeaderContent>
        <MudTh>Basket Name</MudTh>
        <MudTh>Like Count</MudTh>
        <MudTh>Actions</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Basket Name">@context.BasketName</MudTd>
        <MudTd DataLabel="Like Count">@context.LikeCount.ToString()</MudTd>
        <MudTd>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@(() => OpenEditBasketPopup(context.Id, context.UserId))">Edit</MudButton>
            <MudButton Variant="Variant.Filled" Color="Color.Error" OnClick="@(() => OpenDeleteBasketPopup(context.Id))">Delete</MudButton>
        </MudTd>
    </RowTemplate>
</MudTable>

<style>
    .full-width-table .mud-table-container {
        width: 100%;
        overflow-x: auto;
    }
</style>

<br />

@code {
    public List<Basket> Baskets { get; set; } = new List<Basket>();

    protected override async Task OnInitializedAsync()
    {
        await LoadDataAsync();
    }

    private async Task LoadDataAsync()
    {
        var result = await _basketService.GetAllBasketListAsync(0, 8);
        if (result.IsSucceeded && result.Data != null)
        {
            Baskets = result.Data.GetAllBasketsDTOs;
        }
        else
        {
            // Handle error or show message if necessary
        }
    }

    private void OpenAddBasketPopup()
    {
        _dialogService.Show<AddBasketPopup>("Add Basket");
    }


    private async void OpenEditBasketPopup(string id, string userId)
    {
        var parameters = new DialogParameters();
        parameters.Add("Id", id);
        parameters.Add("UserId", userId);
        var dialog = await _dialogService.ShowAsync<EditBasketPopup>("Edit Basket", parameters);
        if (!(await dialog.Result).Cancelled)
        {
            await OnInitializedAsync();
            dialog.Close();
        }
    }



    private void OpenDeleteBasketPopup(string id)
    {
        //var parameters = new DialogParameters { { "Id", id } };
        //_dialogService.Show<DeleteBasketPopup>("Delete Basket", parameters);
    }
}
