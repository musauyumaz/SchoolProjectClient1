

@using SchoolProjectClient.Client.Services.Comments
@using SchoolProjectClient.Client.Model.Comment
@using MudBlazor;
@using Mapster;

@inject ICommentService _commentService;
@inject ISnackbar _snackbar;
@inject NavigationManager _navigationManager;



@code {
    [Parameter] public string Id { get; set; }
    [Parameter] public string UserId { get; set; }
    private GetByIdComment getByIdComment = new();
    private AddLikeComment addLikeComment = new();
    private bool loading = false;

    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    protected override async Task OnInitializedAsync()
    {
        loading = true;
        try
        {
            getByIdComment = (await _commentService.GetByIdCommentAsync(Id)).Data;
            Console.WriteLine();
        }
        catch (Exception ex)
        {
            _snackbar.Add("Error loading comment: " + ex.Message, Severity.Error);
        }
        finally
        {
            loading = false;
        }

        loading = true;
        try
        {
            addLikeComment = getByIdComment.Adapt<AddLikeComment>();

            var result = await _commentService.LikeCommentAsync(addLikeComment);
            if (result.IsSucceeded)
            {
                _snackbar.Add("Comment like successfully!", Severity.Success);
                MudDialog.Close(DialogResult.Ok(true));
            }
            else
            {
                _snackbar.Add("Failed to like comment: " + result.Message, Severity.Error);
            }
        }
        catch (Exception ex)
        {
            _snackbar.Add("Failed to like comment: " + ex.Message, Severity.Error);
        }
        finally
        {
            loading = false;
        }
    }

    void Cancel() => MudDialog.Cancel();
}
